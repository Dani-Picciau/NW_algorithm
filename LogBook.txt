12/12/2024: {
    Posizione: Hub studio, Piandanna.
    Si è iniziato a pensare ad una rappresentazione per il sistema, sono quindi sorti i primi dubbi, subito estinti dal fantastico capogruppo Monica Manai che ci ha riportato sulla giusta strada facendoci capire che un singolo modulo andasse suddiviso in tanti, tantissimi sottomoduli.
    Per oggi è tutto, continueremo a pensare come strutturare il sistema per tuuuuuutto il giorno.
    Daniele e Monica hanno elaborato una prima idea di sistema, disegnando una bozza dello schematico. 
}

13/12/2024: {
    Posizione: Hub studio/Aula 1, Piandanna.
    Daniele e Monica hanno mostrato lo schematico al gruppo, il funzionamento è riportato nel file "Funzionamento Datapath". Abbiamo notato che le "matrici" del codice c, vedi "nw.c",
    sono composte come degli array monodimensionali, pensiamo che questa struttura sia stata scelta dai creatori del codice per facilitare la traduzione del codice in verilog, dato che una RAM in verilog è definita come un array monodimensionale di N-locazioni(128*128 nel nostro caso) dove all'interno ci sono N-bits(2 nel nostro caso), ciò vuol dire che usciranno esattamente 16.384 celle di memoria (OMG!!).
    Abbiamo anche ragionato per la codifica del trattino, per il gap, nell'uscita finale arrivando quindi alla soluzione di usare direttamente 3 bit per la codifica dei parametri. Esame 19 giugno 2024 RAM dual input, dual output.

    Aggiornamento delle 21:56, quì parla Daniele: Stanza Ersu.
    Dopo il super pisolino pomeridiano che ha intrappolato il nostro team-mate Matteo, io, Diego e la Team leader Monica (detta la Grandiosa) abbiamo continuato a pensare a come risolvere il problema riguardante l'inizializzazione della matrice, arrivando finalmente ad una conclusione!
    I due blocchi coinvolti sono "Ram punteggi" e un nuovo blocco, un contatore, che prende il posto del vecchio blocco "inizializzazione".
    "Ram punteggi" (matrice) è una ram dual-port: tramite "en_iniz" viene attivata la porta che si occupa di leggere i dati mandati in ingresso dal counter, il quale si occupa di inizializzare la prima riga e la prima colonna della nostra matrice.
    Quando il counter si accorgerà di aver finito le sue operazioni, manderà un segnale di fine che attiverà un enable gestito dalla macchina a stati per poter attivare la seconda porta, disattivando la prima (en_iniz), della nostra "Ram punteggi".
    Grazie all'attivazione della seconda porta viene quindi permesso l'ingresso degli indici x e y (anche chiamati i e j dal sottoscritto), inviati dal blocco "logica di inserimento" (ancora da gestire, adesso ci arrivo), in modo da permettere l'inserimento dei punteggi che popoleranno la matrice.

    Per quanto riguarda il blocco "logica di inserimento", siamo convinti che si tratti anch'esso di un counter, il quale dovrà simulare il comportamento di due for annidati per poter mandare le giuste coordinate dei valori x e y, da incrementare secondo la tecnica descritta da Monica l'altro giorno (TA TA TA TA TA TA TA TA). 
}  

16/12/2024: {
    Posizione: Aula multimediale, palazzo ingegneristico, Agraria
    Logica di inserimento: L'indice del vettore dei punteggi è calcolato coem i+N*j dove i e j sono gli indici delle due RAM delle seqenze e N è il numero di elementi "per riga" nella visione matriciale, ovvero quante lettere compongono la sequenza i. In una matrice 5*5 N=5 
}

17/12/2024: {
    Posizione: Aula multimediale, palazzo ingegneristico, Agraria
    I nostri 3 eroi (i sopravvissuti) hanno dovuto affrontare una grande sfida quest'oggi. Sono stati infatti riscontrati dei problemi con la ram dei punteggi. Quando stavamo per iniziare ad affrontare il backtraking si è presentato a noi un nuovo problema: come gestire le celle vuote.
    La RAM era infatti stata pensata con 129*129*9 bit (129-> 128 della sequenza + cella di gap e 9-> numero di bit che serve per rappresentare i numeri da -128 a 128 in complemento a 2). Dobbiamo contare quante lettere ci sono nelle sequenze per poter fare una matrice giusta? Se si, come si fa? Oppure, Dobbiamo gestire sempre una matrice 129*129*9? In questo caso, come si fa ad andare nell'ultima cella con un valore valido per fare il backtraking?  
    Oppure ipotizziamo che le lettere arrivino giuste. è 32*32 arrivano 32 lettere per la prima sequenza e 32 per la seconda. E non abbiamo nessun problema, sappiamo a priori che le sequenze saranno giuste, della lunghezza giusta.  
}

18/12/2024: {
    Posizione: Hub studio, Piandanna.
    Decisione suddivisione compiti e inizio ragionamento per traceback.
    La suddivisione dei compiti: UART, TraceBack, Scrittura moduli.
}

28/12/2024: {
    Posizione: casa Manai-Fois, Soffitta
    Oggi la sottoscritta aggiornerà il logbook fino agli ultimi aggiornamenti sul progetto, che risalgono al 20/12 -vagone dal treno diretto a Cagliari. Durante il viaggio allo studioso è venuto in mente di continuare a pensare al TraceBack, visto anche il ritardo che il treno stava accumulando, e così abbiamo fatto.
    Siccome non so come spiegarvelo, per capirlo dovrete guardare lo schema che abbiamo disegnato bene successivamente, così posso solo dire come funzionano i componenti (almeno nella mia testa)
    In pratica "Count lettura direzioni" conta gli indici del vettore a partire dall'ultima cella e li manda sia alla RAM che tiene in memoria le direzioni degli spostamenti (la freccia che indica da quale cella si è ottenuto il risultato migliore per il punteggio della cella in esame) che alle RAM che tengono in memoria le sequenze che ci arrivano in ingresso, e riceve in ingresso la direzione dell cella corrente per poter calcolare gli indici per la prossima cella ("simbolo"). 
    "Elabora" prende in ingresso sia la direzione proveniente dalla RAM direzioni (quel "simbolo" che va anche in "Count lettura direzioni") e anche le lettere delle sequenze dalle RAM A e B delle celle corrispondenti al simbolo. Mi rendo conto di averlo spiegato un po' col culo, riproviamo: in pratica se abbiamo la visualizzazione a matrice ad ogni cella in cui abbiamo un punteggio e/o un simbolo, corrispondono due lettere, una della sequenza verticale e una della sequenza orizzontale, ecco, prendiamo queste due lettere dalle RAM. 
    Cosa fa "Elabora" con questi segnali? Calcola il punteggio della sequenza fino a quel momento ("Score" che è un'uscita del sistema) e manda i simboli (A, T, G, C o - )da mettere nelle due sequenze allineate che verranno memorizzate nelle RAM A e B allinete.Quando finisce di elaborare manda un segnale alla macchina a stati in modo che questa abiliti la scrittura selle due RAM e il modulo "Counter RAM all.".
    Invece il "Counter RAM all." calcola gli indici da madare alle due RAM per l'inserimento dei dati in arrivo da "Elabora", solo quando avrà un enable dalla macchina a stati.

    Non so se funzioni o se serva altro, in ogni caso c'è da definire bene la macchina a stati, ma sarà un problema della me del futuro.

    Con Questo pernso che sia tutto, se non ho spiegato bene qualcosa o non vi torna qualche passaggio chiedete pure. 

    Buone vacanze ragazzi 
    Passo e chiudo 
    ~ La vostra collega che avete nominato capogruppo
}

30/12/2024: {
    Posizione: Sala studio 1, Discord
    Mattina: 
        Revisione datapath e fsm. I disegni aggiornati sono stati caricati su github dal nostro esperto di estensioni VisualStudio. 
        I nostri eroi hanno anche provato ad avventurarsi nel magico mondo di Vitis HLS con scarso successo.
    Pomeriggio: 
        Divisione dei compiti, Diego si è occupato della Uart, Daniele ha scritto (anche se ha usato più il riempimento automatico che altro) la FSM e la RAM A (la RAM B è identica), mentre la sottoscritta ha aggiornato il file "Blocchi datapath.txt" e adesso il LogBook. 
        Il tutto contornato da alcune pause, come la discussione della differenza tra avvolgibile e tapparella (che sono la stessa cosa in pratica) e l'idea di un viaggio in Giappone in quanto il nostro collega Diego ha trovato dei voli convenienti a marzo.
        
        E questo è tutto, alla prossima!
}

04/01/2025: {
    Posizione: Stanza di Daniele, Pirri.
    Monica ha finito di scrivere e otimizzare sia la RAM dei punteggi, sia la RAM delle direzioni, e nel mentre, assieme all'aiuto di Daniele, dopo tante ma tantissime prove su Vivado sono riusciti a far funzionare anche i rispettivi test-bench.
    Ad ora risultano completati i seguenti blocchi: Direction_RAM, FSM, Inizializzation_counter, Match_mismatch, Max e Scores_RAM.
    Potremmo sembrare un po indietro, ma adesso con la fine delle vacanze riprenderemo bene il ritmo anche perche effettivamente ce la stiamo chillando un pò troppo.
    Per ora è tutto, buon sabato sera a tutti <3.
}

08/01/2025: {
    Posizione: Hub di medicina ad Agraria
    Sono le 10:00 e i moduli del nostro datapath sono quasi tutti terminati. Mancano solo la ROM A e la ROM B che memorizzano le sequenze iniziali.
    Ora tutti e 5 i membri del gruppo sono presenti. 
    Siccome mancano un po' di pezzi in questo logbook faremo un mega riassunto: 
        - Dopo un colloquio con il professore la RAm A e la RAM B iniziali (quelle che hanno le sequenze iniziali) sono diventate delle ROM e per poterle riempire è stato creato un altro modulo, il converter, per poter leggere le sequenze da file.
        - Ci saranno due moduli converter, uno per ls ROM A e uno per la ROM B
        - Bisogna aggiustare la macchina a stati per aggiungere un primo stto inziale, IDLE, in cui si riempiono le ROM.
        - Bisogna in ogni caso rivedere la macchina a stati e valutare tutti gli aggiornamenti del sistema 
        - Il counter delle RAM allineate ha adesso una sola uscita (l'indice) che va ad entrambe le RAM allineate.

    Siccome per il report bisigna scrivere chi ha fatto quale modulo e chi ha aiutato chi, suggerirei di aggiungere dei commenti in tutti i codici con il nome dell'autore e del/degli aiutante/i.

    Dato che abbiamo finito, o quasi, con tutti i moduli, ora Matteo aiuterà Diego (che ha acconsentito a ricevere un aiuto) con la UART.

    Al momento attuale mancano i moduli per le ROM che stanno facendo Andrea e Daniele, e poi i moduli comprensivi di più moduli per poter testare i vari moduli in collaborazione. Lo farò più tardi a lezione. 

    A parte questo per il momento non ci sono altre cose da fare. 

    Spero di aver detto tutto, non mi viene in mente altro, al prossimo aggiornamento e buon lavoro a tutti. 

    Aggiornamento delle 13.40
    Posizione: student-hub, Piandanna

    Tutto il nostro entusiasmo è stato troncato dal professore stamattina a lezione.
    Qualcuno potrebbe anche dire che la situazione è degenerata velocemente. 
    I nostri blocchi RAM non vanno bene perché non hanno un corrispettivo fisico esistente nella realtà, per questo andranno suddivise in vari moduli per avere pieno controllo delle funzionalità e per fare in modo che le RAM facciamo solo le RAM.
    Questo "piccolo" cambiamento ci costerà un po' di lavoro in più del previsto.
    Tuttavia io resto molto fiduciosa che siano modifiche fattibili e non troppo compplicate, certamente andranno modificati i blocchi, aggiunti altri blocchi e cambiata la macchian a stati.
    Però nessuna sfida è impossibile per i nostri eroi.
    Faremo qualche passo indietro per poter fare molti passi avanti e rompergli il cul* all'esame (sperando non faccia lui il cul* a noi)

    Mi scuso per questa piccola parentesi ma qual che va detto va detto 
    Comunque, convinta che i nostri sforzi non siano vani, auguro a tutti un buon proseguimento!
}
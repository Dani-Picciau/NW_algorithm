`include "/c:.../Insertion_counter.v"

module TB_Insertion_counter;
    integer index;
    parameter N=5;
    parameter BitAddr = $clog2(N+1);

    reg clk, rst;
    reg en_read;
    reg change_index;
    wire end_filling;
    wire [BitAddr:0] i, j;
    
    Insertion_counter # (
        .N(N)
    ) Ins_c (
        .clk(clk),
        .rst(rst),
        .en_read(en_read),
        .change_index(change_index),
        .end_filling(end_filling),
        .i(i),
        .j(j)
    );

    // Generate the clock signal
    always #0.5 clk = ~clk;

    initial begin
       index=0;
       clk=0;
       rst=1;
       en_read=0;
       change_index=0;
       
       #5.5 rst=0;
       en_read=1;
       for(index = 0; index < 25; index = index + 1) begin
            #1 change_index = 0;
            #12 change_index = 1;
       end
       en_read=0;
       change_index = 0;
       #10 
       $stop;
    end
endmodule